{
  "openapi": "3.0.3",
  "info": {
    "title": "Amature Cycling Stats V1",
    "description": "Amature Cycling Stats API Documentation\n\nThe ACS API is wrtten using NextJS and Prisma.\n\nThis documentation was created generated as a Postman Collection, and converted to OpenAPI spec using Postman2OpenAPI",
    "version": "1.0.0",
    "contact": {}
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/v1/races": {
      "get": {
        "tags": [
          "Races"
        ],
        "summary": "a list of Races",
        "description": "/races\n\nGet a list of races.",
        "operationId": "aListOfRaces",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "100"
            },
            "description": "number: limit the number of races returned"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "vol"
            },
            "description": "string: filter by event name"
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "id"
            },
            "description": "id | eventId | startDate"
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "asc"
            },
            "description": "asc | desc"
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "string",
              "example": ""
            },
            "description": "number[]: a listof race ids"
          },
          {
            "name": "eventid",
            "in": "query",
            "schema": {
              "type": "string",
              "example": ""
            },
            "description": "number: an event id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Races"
        ],
        "summary": "a new Race",
        "description": "/races\n\nCreate a race.",
        "operationId": "aNewRace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "endDate": {
                    "nullable": true,
                    "example": null
                  },
                  "location": {
                    "type": "string",
                    "example": "Northfield, MA"
                  },
                  "name": {
                    "type": "string",
                    "example": "Killerwat Grass Crit"
                  },
                  "raceTypeId": {
                    "type": "number",
                    "example": 1
                  },
                  "startDate": {
                    "type": "string",
                    "example": "Fri Apr 12 2024"
                  }
                }
              },
              "examples": {
                "a new Race": {
                  "value": {
                    "endDate": null,
                    "location": "Northfield, MA",
                    "name": "Killerwat Grass Crit",
                    "raceTypeId": 1,
                    "startDate": "Fri Apr 12 2024"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/races/categories": {
      "get": {
        "tags": [
          "Races"
        ],
        "summary": "a list of all Categories",
        "description": "races/categories",
        "operationId": "aListOfAllCategories",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/races/totals": {
      "get": {
        "tags": [
          "Races"
        ],
        "summary": "a total count of Races and Results",
        "description": "/races/totals\n\nGet the total count of races and results for a given time period, grouped by either 'month', 'quarter' or 'year'.",
        "operationId": "aTotalCountOfRacesAndResults",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "2024-01-01"
            },
            "description": "YYY-MM-DD: start of date range"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "2024-09-01"
            },
            "description": "YYY-MM-DD: end of date range"
          },
          {
            "name": "groupby",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "month"
            },
            "description": "month | quarter | year"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/races/5/results": {
      "get": {
        "tags": [
          "Races"
        ],
        "summary": "a list of Results for a single Race",
        "description": "/races/\\[id\\]/results",
        "operationId": "aListOfResultsForASingleRace",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/races/results/recent": {
      "get": {
        "tags": [
          "Races"
        ],
        "summary": "a list of recent Results",
        "description": "races/results/recent\n\nGet a list of the most recent races with results. You can limit the. number of races or results that are returned. You can also filter by location.",
        "operationId": "aListOfRecentResults",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "2"
            },
            "description": "number: limit the number of races returned"
          },
          {
            "name": "resultlimit",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "3"
            },
            "description": "number: limit the number of results returned for each race"
          },
          {
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string",
              "example": ""
            },
            "description": "string: filter by location"
          },
          {
            "name": "",
            "in": "query",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/results": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "a list of Results for a single Rider",
        "description": "/results\n\nGet results for a single rider.\n\n@TODO this endpoint will be updated to /riders/\\[id\\]/results",
        "operationId": "aListOfResultsForASingleRider",
        "parameters": [
          {
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "4"
            },
            "description": "number: a rider id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Results"
        ],
        "summary": "a new Result",
        "description": "/results\n\nCreate a new result.",
        "operationId": "aNewResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "number",
                    "example": 1
                  },
                  "lap": {
                    "type": "number",
                    "example": 1
                  },
                  "noPlaceCodeTypeId": {
                    "type": "number",
                    "example": 1
                  },
                  "place": {
                    "type": "number",
                    "example": 4
                  },
                  "points": {
                    "type": "number",
                    "example": 1
                  },
                  "resultTypeId": {
                    "type": "number",
                    "example": 1
                  },
                  "riderId": {
                    "type": "number",
                    "example": 1
                  },
                  "time": {
                    "type": "string",
                    "example": ""
                  }
                }
              },
              "examples": {
                "a new Result": {
                  "value": {
                    "eventId": 1,
                    "lap": 1,
                    "noPlaceCodeTypeId": 1,
                    "place": 4,
                    "points": 1,
                    "resultTypeId": 1,
                    "riderId": 1,
                    "time": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/riders": {
      "post": {
        "tags": [
          "Riders"
        ],
        "summary": "a new Rider",
        "description": "/riders\n\nCreate a new rider.",
        "operationId": "aNewRider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "about": {
                    "type": "string",
                    "example": "It reaaaallly bothered me."
                  },
                  "country": {
                    "type": "string",
                    "example": "USA"
                  },
                  "dob": {
                    "type": "string",
                    "example": "1990-01-01"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Mipper"
                  },
                  "hometown": {
                    "type": "string",
                    "example": "New York, NY"
                  },
                  "insta": {
                    "type": "string",
                    "example": "portamip"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Mopperson"
                  },
                  "photo": {
                    "type": "string",
                    "example": "https://www.procyclingstats.com/images/riders/bp/bf/julian-alaphilippe-2024.jpeg"
                  },
                  "strava": {
                    "type": "string",
                    "example": "87935790234"
                  }
                }
              },
              "examples": {
                "a new Rider": {
                  "value": {
                    "about": "It reaaaallly bothered me.",
                    "country": "USA",
                    "dob": "1990-01-01",
                    "firstName": "Mipper",
                    "hometown": "New York, NY",
                    "insta": "portamip",
                    "lastName": "Mopperson",
                    "photo": "https://www.procyclingstats.com/images/riders/bp/bf/julian-alaphilippe-2024.jpeg",
                    "strava": "87935790234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/riders/1": {
      "get": {
        "tags": [
          "Riders"
        ],
        "summary": "a single Rider",
        "description": "/riders/\\[id\\]\n\nGet a single Rider.",
        "operationId": "aSingleRider",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/riders/1/teams": {
      "post": {
        "tags": [
          "Riders"
        ],
        "summary": "http://localhost:8080/api/latest/riders/1/teams",
        "description": "http://localhost:8080/api/latest/riders/1/teams",
        "operationId": "httpLocalhost8080ApiLatestRiders1Teams",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "teamId": {
                    "type": "number",
                    "example": 2
                  }
                }
              },
              "examples": {
                "http://localhost:8080/api/latest/riders/1/teams": {
                  "value": {
                    "teamId": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/riders/rankings": {
      "get": {
        "tags": [
          "Riders"
        ],
        "summary": "a list of Riders by Rank",
        "description": "/riders/rankings\n\nGet a list of riders by rank. Returns a list of riders who have accumulated the most points within a calendar year in descending order. Defaults to the current calendar year.",
        "operationId": "aListOfRidersByRank",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "10"
            },
            "description": "number: limit the number of ranings returned"
          },
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "2024"
            },
            "description": "number: a calendar year"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Races",
      "description": "Next JS App Router Directory"
    },
    {
      "name": "Results",
      "description": "Next JS App Router Directory"
    },
    {
      "name": "Riders",
      "description": "Next JS App Router Directory"
    }
  ]
}